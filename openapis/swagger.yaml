openapi: 3.0.0
servers:
  - url: 'https://example.domain/'
info:
  title: Peregrine OpenAPI Specification
  version: 0.1.0
  description: >-
    GraphQL search microservice for CDIS Gen 3 data commons. Code is available
    on [GitHub](https://github.com/uc-cdis/peregrine).
  termsOfService: 'http://cdis.uchicago.edu/terms/'
  contact:
    email: cdis@uchicago.edu
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: graphql
    description: GraphQL Queries
  - name: system
    description: System endpoints
paths:
  /graphql:
    post:
      tags:
        - graphql
      summary: Perform a GraphQL Query
      description: >-
        Perform a graphql query over the data commons given a query, variables,
        and name.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryOutputRef'
        '400':
          description: Invalid input
        '403':
          description: Invalid authorization token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryInputInfo'
        description: The GraphQL query and parameters
        required: true
  /getschema:
    get:
      tags:
        - graphql
      summary: Returns the data dictionary schema json
      description: >-
        The data dictionary for the data commons is internally converted from
        yaml files to json. This endpoint returns the json schema for the
        dictionary for use in generating queries.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaOutputRef'
  /_version:
    get:
      tags:
        - system
      summary: Returns the version of Peregrine
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionOutputRef'
  /_status:
    get:
      tags:
        - system
      summary: Returns if Peregrine is healthy or not
      description: >-
        Health check endpoint which checks if Peregrine can connect to its
        backing PostgreSQL datastore or not.
      responses:
        '200':
          description: Healthy
        default:
          description: Unhealthy
components:
  schemas:
    QueryInputInfo:
      type: object
      properties:
        query:
          type: string
          description: the text of the GraphQL query
        variables:
          type: string
          description: variables for the GraphQL query
        operationName:
          type: string
          description: the name of the operation
      example:
        query: '{ project {project_id} }'
        operationName: null
        variables: null
    QueryOutputRef:
      type: object
      properties:
        data:
          type: object
          description: the results of the GraphQL query
    SchemaOutputRef:
      type: object
      properties:
        data:
          type: object
          description: the json schema for the data dictionary
    VersionOutputRef:
      type: object
      properties:
        commit:
          type: string
          description: the current git commit hash for this version
        version:
          type: string
          description: the current git tag version
        dictionary:
          type: object
          description: the version information for the data dictionary
          properties:
            commit:
              type: string
              description: the current git commit hash for the dictionary
            version:
              type: string
              description: the current git tag version for the dictionary
