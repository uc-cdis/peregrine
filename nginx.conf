user gen3;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/lib/nginx/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    # Custom logging format; conditional logging for health checks
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    map $http_user_agent $loggable {
        default                               1;
        "ELB-HealthChecker/2.0"               0;
        ~^Uptime-Kuma                         0;
        ~^kube-probe                          0;
        ~GoogleStackdriverMonitoring          0;
    }
    access_log /var/log/nginx/access.log main if=$loggable;

    # Security hardening
    server_tokens off;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;

    # File handling and performance
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Allow large files and headers
    client_max_body_size 2g;
    large_client_header_buffers 16 128k;
    client_header_buffer_size 16k;

    # Proxy buffer tuning
    proxy_buffer_size           64k;
    proxy_buffers               16 64k;
    proxy_busy_buffers_size     128k;
    client_body_buffer_size     16k;

    proxy_read_timeout          600;
    proxy_send_timeout          600;
    proxy_connect_timeout       60;

    # Load any modular configs (optional)
    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80 default_server;
        server_name _;

        location / {
            proxy_pass http://127.0.0.1:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Optionally restrict methods if all routes are POST/GET
            # limit_except GET POST { deny all; }
        }
    }
}
